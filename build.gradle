buildscript {
    dependencies {
        classpath 'gradle.plugin.nl.javadude.gradle.plugins:license-gradle-plugin:0.13.1'
    }
}

plugins {
    id 'java-gradle-plugin'
    id 'com.gradle.plugin-publish' version '0.9.7'
    id 'nebula.plugin-plugin' version '5.6.0'
    id 'nebula.kotlin' version '1.1.0'
}

apply plugin: 'com.github.hierynomus.license'

repositories {
    jcenter()
}

group = 'io.spring.gradle'
description = 'Gradle plugin that automatically discovers Rewrite refactoring rules and applies them to your codebase'

contacts {
    'jkschneider@gmail.com' {
        moniker 'Jon Schneider'
        github 'jkschneider'
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile 'com.netflix.devinsight.rewrite:rewrite-core:1.2.0'
    compile 'eu.infomas:annotation-detector:latest.release'

    testCompile 'junit:junit:4.+'
}

pluginBundle {
    website = 'https://github.com/spring-gradle-plugins/rewrite-gradle'
    vcsUrl = 'https://github.com/spring-gradle-plugins/rewrite-gradle.git'
    description = 'Pluggable and distributed refactoring tool for Java source code'

    plugins {
        sourceRefactor {
            id = 'io.spring.rewrite'
            displayName = 'Distributed Java source refactoring plugin'
            description = 'Pluggable and distributed refactoring tool for Java source code'
            tags = ['spring', 'rewrite', 'lint', 'refactor']
        }
    }

    mavenCoordinates {
        groupId = 'io.spring.gradle'
        artifactId = 'rewrite-gradle'
    }
}

bintray.pkg {
    repo = 'jars'
    userOrg = 'spring'
    websiteUrl = 'https://github.com/spring-gradle-plugins/rewrite-gradle'
    vcsUrl = 'https://github.com/spring-gradle-plugins/rewrite-gradle.git'
    issueTrackerUrl = 'https://github.com/spring-gradle-plugins/rewrite-gradle/issues'
    labels = ['gradle', 'spring', 'rewrite']
}

license {
    header = file('gradle/licenseHeader.txt')
    exclude '**/*.tokens'
    mapping {
        kt = 'JAVADOC_STYLE'
    }
    sourceSets = project.sourceSets
    strictCheck = true
}

idea {
    module {
        testSourceDirs += file('src/test/kotlin')
    }
}
